name: Go App Pipeline
on:
  workflow_dispatch: null
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
env:
  DJANGO_ENV: development
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
jobs:
  build:
    name: Build
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST: localhost
          POSTGRES_DB: ${{env.DB_NAME}}
          POSTGRES_USER: ${{ vars.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: 
          --health-cmd="pg_isready" 
          --health-interval=10s 
          --health-timeout=5s
          --health-retries=5
    env:
      DB_NAME: falcondb
      DB_HOST: localhost
      DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_USERNAME: ${{ vars.POSTGRES_USERNAME }}
      DB_PORT: 5432
      DB_SSLMODE: disable
      GO_ENV: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      
      - name: Cache Go dependencies
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-packages-${{ hashFiles('go.sum')}}
      
      - name: install dependencies
        run: go mod download
        
      - name: run & check
        run: |
          go build 
          ./falcon &
          echo $! > server.pid
          sleep 2
          curl http://127.0.0.1:3000/health

      - name: stop app
        run: |
          kill -9 $(cat server.pid)

  test:
    name: Test
    env:
      GO_ENV: test
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      
      - name: Cache Go dependencies
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-packages-${{ hashFiles('go.sum')}}
      
      - name: install dependencies
        run: go mod download

      - name: make tests
        id: go_test
        run: go test -coverprofile=coverage.txt ./...

      - name: upload coverage report
        if: success() && steps.go_test.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.txt
          retention-days: 5
  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: checkout sourcecode
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: set up docker buildx
        id: docker-environ
        uses: docker/setup-buildx-action@v3
      - name: Build and push docker to hub
        if: success() && steps.docker-environ.outcome == 'success'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{secrets.DOCKER_USERNAME}}/falcon-python-app:${{ github.ref_name}}-${{github.sha }}
